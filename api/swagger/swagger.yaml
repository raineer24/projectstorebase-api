swagger: "2.0"
info:
  version: "1.0.0"
  title: Grocer X App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /v1
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
# x-globalParameters: &GLOB_HEADER
#   - $ref: '#/parameters/authHeader'
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /:
    x-swagger-router-controller: users
    get:
      tags:
        - profile
      summary: Return user profile
      operationId: connectDb
      responses:
        200:
          description: Profile Object
          schema:
            properties:
              id:
                type: number
                example: 5000012
        # 404:
        #   description: ofile not found
        #   schema:
        #     properties:
        #       message:
        #         type: string
        #         example: Not Found
  /user/account/{id}/view:
    x-swagger-router-controller: users
    get:
      tags:
        - profile
      summary: Return user profile
      operationId: viewAccount
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Profile Object
          schema:
            properties:
              id:
                type: number
                example: 5000012
              firstName:
                type: string
                example: John
              lastName:
                type: string
                example: Stone
              dateBirthday:
                type: number
                example: 587260800000
                description: timestamp
              address1:
                type: string
                example: Upper Thompson Road
              address2:
                type: string
                example: East Cost Drive
        # 404:
        #   description: ofile not found
        #   schema:
        #     properties:
        #       message:
        #         type: string
        #         example: Not Found
  /user/account/{username}/check:
    x-swagger-router-controller: users
    get:
      tags:
        - profile
      summary: Return user profile
      operationId: checkAccount
      parameters:
        - $ref: "#/parameters/username"
      responses:
        200:
          description: Profile Object
          schema:
            properties:
              id:
                type: number
                example: 5000012
              firstName:
                type: string
                example: John
              lastName:
                type: string
                example: Stone
              dateBirthday:
                type: number
                example: 587260800000
                description: timestamp
              address1:
                type: string
                example: Upper Thompson Road
              address2:
                type: string
                example: East Cost Drive
  /user/account/login:
    x-swagger-router-controller: users
    post:
      tags:
        - user
      summary: Return authenticated & authorized user
      operationId: loginAccount
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/UserLogin"
      responses:
        200:
          description: Successful login
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /user/account/save:
    x-swagger-router-controller: users
    post:
      tags:
        - user
      summary: Register user account
      operationId: registerAccount
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/UserRegister"
      responses:
        200:
          description: Successful registration
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /user/account/savemany:
    x-swagger-router-controller: users
    post:
      tags:
        - user
      summary: Register user account
      operationId: registerAccounts
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/MultipleUserRegister"
      responses:
        200:
          description: Successful registration
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /user/account/{id}/save:
    x-swagger-router-controller: users
    put:
      tags:
        - user
      summary: Update user account
      operationId: updateAccount
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/UserRegister"
      responses:
        200:
          description: Successful update
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /user/account/{id}/deactivate:
    x-swagger-router-controller: users
    put:
      tags:
        - user
      summary: Deactivate user account
      operationId: deactivateAcct
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/UserRegister"
      responses:
        200:
          description: Successful update
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /user/account/{id}/activate:
    x-swagger-router-controller: users
    put:
      tags:
        - user
      summary: Activate user account
      operationId: activateAcct
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/UserRegister"
      responses:
        200:
          description: Successful update
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /user/account/order/{useraccountId}:
    x-swagger-router-controller: orders
    get:
      tags:
        - order
      summary: Get user's orders
      operationId: getAllOrders
      parameters:
        - $ref: "#/parameters/useraccountId"
      responses:
        200:
          description: Get all orders
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /user:
    x-swagger-router-controller: users
    get:
      tags:
        - user
      summary: Get all users
      operationId: getAllUsers
      parameters:
        - $ref: "#/parameters/skip"
        - $ref: "#/parameters/limit"
      responses:
        200:
          description: Get all users
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /user/account/partnerbuyerusers/{partner_id}:
    x-swagger-router-controller: partnerbuyeruser
    get:
      tags:
        - partnerbuyeruser
      summary: check if user is in partnerbuyeruser table
      operationId: getUsers
      parameters:
        - $ref: "#/parameters/partner_id"
        - $ref: "#/parameters/skip"
      responses:
        200:
          description: Get all partner buyer users
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Not Found
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /user/account/partnerbuyeruser/{useraccount_id}:
    x-swagger-router-controller: partnerbuyeruser
    get:
      tags:
        - user
      summary: check if user is in partnerbuyeruser table
      operationId: getUser
      parameters:
        - $ref: "#/parameters/useraccount_id"
      responses:
        200:
          description: User is under a Partner Buyer
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Not Found
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /user/account/partnerbuyeruser/{id}/save:
    x-swagger-router-controller: partnerbuyeruser
    post:
      tags:
        - user
      summary: update partnerbuyeruser
      operationId: updateAccount
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/partnerbuyeruser"
      responses:
        200:
          description: User is under a Partner Buyer
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
              balance:
                type: number
                example: 2000
        403:
          description: Not Found
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /user/account/partnerbuyerusers:
    x-swagger-router-controller: partnerbuyeruser
    put:
      tags:
        - partnerbuyeruser
      summary: create PB User
      operationId: addUsers
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/partnerbuyerusers"
      responses:
        200:
          description: Successful registration
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /user/account/{id}/changepassword:
    x-swagger-router-controller: users
    put:
      tags:
        - user
      summary: user change password
      operationId: changePassword
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: post contents
          required: false
          schema:
            $ref: "#/definitions/UserRegister"
      responses:
        200:
          description: Successful update
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /user/account/token:
    x-swagger-router-controller: token
    post:
      tags:
        - user
      summary: check if token is valid
      operationId: check
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/token"
      responses:
        200:
          description: Token exist
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Not Found
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /user/account/{email}/forgotpassword:
    x-swagger-router-controller: users
    post:
      tags:
        - user
      summary: request password reset
      operationId: forgotPassword
      parameters:
        - $ref: "#/parameters/email"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/UserRegister"
      responses:
        200:
          description: Password reset email sent
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Not Found
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /user/account/email/welcome:
    x-swagger-router-controller: users
    post:
      tags:
        - user
      summary: request password reset
      operationId: welcomeEmail
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/Emails"
      responses:
        200:
          description: Password reset email sent
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Not Found
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /partnerbuyeruser/sendpasswordemails:
    x-swagger-router-controller: partnerbuyeruser
    get:
      tags:
        - user
      summary: send password reset emails to partner buyer users
      operationId: sendPasswordEmails
      responses:
        200:
          description: password reset emails sent
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Not Found
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /orderkey:
    x-swagger-router-controller: orders
    get:
      tags:
        - order
      summary: Generate orderkey
      operationId: generateOrderKey
      responses:
        200:
          description: Generate orderkey
          schema:
            type: object
            properties:
              orderkey:
                type: string
                example: jFUDt1qCaZQK0nFw1516694733016V170CfjO8ILwN8sS
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /order:
    x-swagger-router-controller: orders
    get:
      tags:
        - order
      summary: Get current order
      operationId: getOrder
      parameters:
        - $ref: "#/parameters/orderkey"
      responses:
        200:
          description: Get order record
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
    post:
      tags:
        - order
      summary: Create an order
      operationId: addOrder
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/OrderEntry"
      responses:
        200:
          description: Successful created order
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /order/{orderkeypath}:
    x-swagger-router-controller: orders
    put:
      tags:
        - order
      summary: Update order record
      operationId: updateOrder
      parameters:
        - $ref: "#/parameters/orderkeypath"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/OrderEntry"
      responses:
        200:
          description: Successful updated order
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /order/{id}/seller:
    x-swagger-router-controller: orders
    put:
      tags:
        - order
      summary: Update order record
      operationId: updateOrderById
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/OrderEntry"
      responses:
        200:
          description: Successful updated order
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /order/{id}/payment:
    x-swagger-router-controller: orders
    put:
      tags:
        - order
      summary: Confirm payment for the order
      operationId: confirmOrder
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/OrderEntry"
      responses:
        200:
          description: Successful updated order
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  # /validategc:
  #   x-swagger-router-controller: orders
  #   get:
  #     tags:
  #       - gc
  #     summary: Get all giftcerts
  #     operationId: validateGC
  #     parameters:
  #       - $ref: "#/parameters/skip"
  #       - $ref: "#/parameters/limit"
  #     responses:
  #       200:
  #         description: Get all orders
  #         schema:
  #           type: object
  #           properties:
  #             id:
  #               type: number
  #               example: 10012
  #       403:
  #         description: Unauthorized
  #         schema:
  #           type: object
  #           properties:
  #             message:
  #               type: string
  #               example: Unauthorized
  /selleraccounts:
    x-swagger-router-controller: selleraccount
    get:
      tags:
        - selleraccount
      summary: Get all seller accounts records
      operationId: getAllSellerUsers
      parameters:
        - $ref: "#/parameters/skip"
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/partnersId"
        - $ref: "#/parameters/count"
        - $ref: "#/parameters/sortBy"
        - $ref: "#/parameters/sort"
      responses:
        200:
          description: Fetch all seller account users
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /selleraccount/login:
    x-swagger-router-controller: selleraccount
    post:
      tags:
        - selleraccount
      summary: Return authenticated & authorized seller user
      operationId: loginAccount
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/UserLogin"
      responses:
        200:
          description: Successful login
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /selleraccount/save:
    x-swagger-router-controller: selleraccount
    post:
      tags:
        - selleraccount
      summary: Create new selleraccount
      operationId: registerAccount
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/sellerAccountRegister"
      responses:
        200:
          description: Successful create
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /selleraccount/{id}/view:
    x-swagger-router-controller: selleraccount
    get:
      tags:
        - selleraccount
      summary: Return seller account profile
      operationId: viewAccount
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Profile Object
          schema:
            properties:
              id:
                type: number
                example: 5000012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /selleraccount/{id}/save:
    x-swagger-router-controller: selleraccount
    put:
      tags:
        - selleraccount
      summary: Update selleraccount profile
      operationId: updateAccount
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/selleraccount"
      responses:
        200:
          description: Successful update
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /selleraccount/{id}/changepassword:
    x-swagger-router-controller: selleraccount
    put:
      tags:
        - selleraccount
      summary: selleraccount change password
      operationId: changePassword
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: post contents
          required: false
          schema:
            $ref: "#/definitions/selleraccount"
      responses:
        200:
          description: Successful update
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /selleraccount/token:
    x-swagger-router-controller: token
    post:
      tags:
        - selleracount
      summary: check if token is valid
      operationId: checkPartnerUser
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/token"
      responses:
        200:
          description: Token exist
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Not Found
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /selleraccount/{email}/resetpassword:
    x-swagger-router-controller: selleraccount
    post:
      tags:
        - selleraccount
      summary: request password reset
      operationId: resetPassword
      parameters:
        - $ref: "#/parameters/email"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/UserRegister"
      responses:
        200:
          description: Password reset email sent
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Not Found
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /selleraccount/roles:
    x-swagger-router-controller: selleraccount
    get:
      tags:
        - selleraccount
      summary: Return selleraccount roles
      operationId: getRoles
      responses:
        200:
          description: Profile Object
          schema:
            properties:
              id:
                type: number
                example: 5000012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /seller/account/order/{partnerId}:
    x-swagger-router-controller: orders
    get:
      tags:
        - order
      summary: Get all orders that are confirmed
      operationId: getAllSellerOrders
      parameters:
        - $ref: "#/parameters/partnerId"
        - $ref: "#/parameters/skip"
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/sort"
        - $ref: "#/parameters/sortBy"
      responses:
        200:
          description: Fetch all orders
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /seller/account/{id}/view:
    x-swagger-router-controller: sellers
    get:
      tags:
        - sellers
      summary: Return seller profile
      operationId: viewAccount
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Profile Object
          schema:
            properties:
              id:
                type: number
                example: 5000012
              firstName:
                type: string
                example: John
              lastName:
                type: string
                example: Stone
              dateBirthday:
                type: number
                example: 587260800000
                description: timestamp
              address1:
                type: string
                example: Upper Thompson Road
              address2:
                type: string
                example: East Cost Drive
        # 404:
        #   description: Profile not found
        #   schema:
        #     properties:
        #       message:
        #         type: string
        #         example: Not Found
  /seller/account/save:
    x-swagger-router-controller: sellers
    post:
      tags:
        - sellers
      summary: Register seller account
      operationId: registerAccount
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/UserRegister"
      responses:
        200:
          description: Successful registration
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /seller/account/{id}/save:
    x-swagger-router-controller: sellers
    post:
      tags:
        - sellers
      summary: Update seller account
      operationId: updateAccount
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/UserRegister"
      responses:
        200:
          description: Successful registration
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /orderItem:
    x-swagger-router-controller: orderItems
    get:
      tags:
        - orderItem
      summary: Get items from the current order
      operationId: getOrderItems
      parameters:
        - $ref: "#/parameters/keyQ"
        - $ref: "#/parameters/orderIdQ"
        - $ref: "#/parameters/skip"
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/addCategory"
      responses:
        200:
          description: Fetch all order items
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
    post:
      tags:
        - orderItem
      summary: Add an item to the order
      operationId: addOrderItem
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/OrderItemEntry"
      responses:
        200:
          description: Successful created item
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  # /orderpaymentdetails:
  #   x-swagger-router-controller: orderItems
  #   get:
  #     tags:
  #       - orderpaymentDetails
  #     summary: Get items from the current order
  #     operationId: getOrderPaymentDetails
  #     responses:
  #       200:
  #         description: Fetch all order items
  #         schema:
  #           type: object
  #           properties:
  #             id:
  #               type: number
  #               example: 10012
  #       403:
  #         description: Unauthorized
  #         schema:
  #           type: object
  #           properties:
  #             message:
  #               type: string
  #               example: Unauthorized
  #   post:
  #     tags:
  #       - orderpaymentDetails
  #     summary: Add an item to the order
  #     operationId: addOrderPaymentDetails
  #     parameters:
  #       - name: body
  #         in: body
  #         description: post contents
  #         required: true
  #         schema:
  #           $ref: "#/definitions/OrderPaymentDetailsEntry"
  #     responses:
  #       200:
  #         description: Successful created item
  #         schema:
  #           type: object
  #           properties:
  #             id:
  #               type: number
  #               example: 10012
  #       403:
  #         description: Unauthorized
  #         schema:
  #           type: object
  #           properties:
  #             message:
  #             type: string
  #             example: Unauthorized
  /orderItem/{id}:
    x-swagger-router-controller: orderItems
    put:
      tags:
        - orderItem
      summary: Update item count to the order
      operationId: updateOrderItem
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/OrderItemEntry"
      responses:
        200:
          description: Successful updated order item
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
    delete:
      tags:
        - orderItem
      summary: Add an item to the order
      operationId: removeOrderItem
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Successful deleted
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /orderItem/all/{orderId}:
    x-swagger-router-controller: orderItems
    delete:
      tags:
        - orderItem
      summary: Add an item to the order
      operationId: removeAllOrderItems
      parameters:
        - $ref: "#/parameters/orderId"
      responses:
        200:
          description: Successful deleted
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /timeslotorder:
    x-swagger-router-controller: timeslotorders
    get:
      tags:
        - timeslotOrder
      summary: Get all timeslots
      operationId: getTimeslotOrderAll
      responses:
        200:
          description: Fetch all timeslotorders
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
    post:
      tags:
        - timeslotOrder
      summary: Add a timeslotOrder
      operationId: addTimeslotOrder
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/TimeslotOrderEntry"
      responses:
        200:
          description: Successful created
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /transactions:
    x-swagger-router-controller: transactions
    # parameters: *GLOB_HEADER
    get:
      security:
      - Bearer: []
      tags:
      - transactions
      summary: Get all transaction record
      operationId: getTransactions
      responses:
        200:
          description: Fetch all transactions
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
    post:
      tags:
        - transactions
      summary: create transaction record
      operationId: recordTransaction
      parameters:
        - name: body
          in: body
          description: post contents
          required: false
          schema:
            $ref: "#/definitions/transactionEntry"
      responses:
        200:
          description: Successful updated order
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /transactions/{id}:
    x-swagger-router-controller: transactions
    get:
      tags:
      - transactions
      summary: Get a transaction record bases on transaction number
      operationId: getTransaction
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Fetch a transactions
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
    put:
      tags:
        - transactions
      summary: create transaction record
      operationId: updateTransaction
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: post contents
          required: false
          schema:
            $ref: "#/definitions/transactionUpdate"
      responses:
        200:
          description: Successful updated order
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /transactions/orders/{order_id}:
    x-swagger-router-controller: transactions
    get:
      tags:
      - transactions
      summary: Get a transaction record bases on transaction number
      operationId: getTransactionByOrderId
      parameters:
        - $ref: "#/parameters/order_id"
      responses:
        200:
          description: Fetch a transactions
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
    put:
      tags:
        - transactions
      summary: create transaction record
      operationId: updateTransactionByOrderId
      parameters:
        - $ref: "#/parameters/order_id"
        - name: body
          in: body
          description: post contents
          required: false
          schema:
            $ref: "#/definitions/transactionUpdate"
      responses:
        200:
          description: Successful updated order
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /timeslotorder/{orderId}:
    x-swagger-router-controller: timeslotorders
    get:
      tags:
        - timeslotOrder
      summary: Get timeslotorder record
      operationId: getTimeslotOrder
      parameters:
        - $ref: "#/parameters/orderId"
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              id:
                type: number
                example: 123445
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
    put:
      tags:
        - timeslotOrder
      summary: Update timeslot order
      operationId: updateTimeslotOrder
      parameters:
        - $ref: "#/parameters/orderId"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/TimeslotOrderEntry"
      responses:
        200:
          description: Successful updated
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /item:
    x-swagger-router-controller: items
    get:
      tags:
        - item
      summary: Returns 'List of items
      # used as the method name of the controller
      operationId: listItems
      parameters:
        - $ref: "#/parameters/keyword"
        - $ref: "#/parameters/category1"
        - $ref: "#/parameters/category2"
        - $ref: "#/parameters/category3"
        - $ref: "#/parameters/sort"
        - $ref: "#/parameters/sortBy"
        - $ref: "#/parameters/skip"
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/orderBy"
        - $ref: "#/parameters/type"
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              bookmark:
                type: string
                example: asdfasdfasdf213sadfasdf123
              total:
                type: number
                example: 100
              data:
                type: array
                items:
                  - $ref: "#/definitions/ItemList"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - item
      summary: create an item
      operationId: addItem
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/ItemCreate"
      responses:
        200:
          description: Successful created item
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /items/create:
    x-swagger-router-controller: items
    post:
      tags:
        - item
      summary: create items
      operationId: addItems
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/ItemsCreate"
      responses:
        200:
          description: Successful created item
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /item/{id}:
    x-swagger-router-controller: items
    get:
      tags:
        - item
      summary: Get item details
      operationId: previewItem
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              id:
                type: number
                example: 123445
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - item
      summary: upate item
      operationId: updateItem
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/Item"
      responses:
        200:
          description: Successfully updated item
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  # /items/count: FOR FUTURE IMPLEMENTATION
  #   x-swagger-router-controller: items
  #   get:
  #     tags:
  #       - item
  #     summary: Returns count of items
  #     # used as the method name of the controller
  #     operationId: countItems
  #     responses:
  #       200:
  #         description: Success
  #         schema:
  #           type: object
  #           properties:
  #             bookmark:
  #               type: string
  #               example: asdfasdfasdf213sadfasdf123
  #             total:
  #               type: number
  #               example: 100
  #             data:
  #               type: array
  #               items:
  #                 - $ref: "#/definitions/ItemList"
  #       # responses may fall through to errors
  #       default:
  #         description: Error
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  /items/update:
    x-swagger-router-controller: items
    put:
      tags:
        - item
      summary: upate multiple items
      operationId: updateItems
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/UpdateItems"
      responses:
        200:
          description: Successfully updated item
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /item/{id}/suggestions:
    x-swagger-router-controller: items
    get:
      tags:
        - item
      summary: Get item details
      operationId: getItemSuggestions
      parameters:
        - $ref: "#/parameters/id"
        - $ref: "#/parameters/limit"
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              id:
                type: number
                example: 123445
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /category/list:
    x-swagger-router-controller: categories
    get:
      tags:
        - category
      summary: Returns structured categories
      # used as the method name of the controller
      operationId: listAll
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              categories:
                type: object
                example: {}
              subCategories:
                type: object
                example: {}
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /category:
    x-swagger-router-controller: categories
    post:
      tags:
        - category
      summary: create a category
      operationId: addCategory
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/CategoryCreate"
      responses:
        200:
          description: Successful created item
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /category/addmany:
    x-swagger-router-controller: categories
    post:
      tags:
        - category
      summary: create a category
      operationId: addCategories
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/CategoryCreate"
      responses:
        200:
          description: Successful created item
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /list/{useraccountId}/user:
    x-swagger-router-controller: list
    get:
      tags:
        - list
      summary: returns all user's lists
      operationId: getAllList
      parameters:
        - $ref: "#/parameters/useraccountId"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/list"
      responses:
        200:
          description: Successfully retrieved list
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
    post:
      tags:
        - list
      summary: create new list
      operationId: saveList
      parameters:
        - $ref: "#/parameters/useraccountId"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/list"
      responses:
        200:
          description: Successfully created list
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /list/{id}:
    x-swagger-router-controller: list
    put:
      tags:
        - list
      summary: upate list record
      operationId: updateList
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/list"
      responses:
        200:
          description: Successfully updated grocery list
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
    delete:
      tags:
        - list
      summary: delete list record
      operationId: removeList
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Successfully deleted grocery list
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /listitems:
    x-swagger-router-controller: listitems
    post:
      tags:
        - listitems
      summary: add item to list
      operationId: saveListItem
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/listitem"
      responses:
        200:
          description: Successful creation
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /listitems/{listId}/list:
    x-swagger-router-controller: listitems
    get:
      tags:
        - listitems
      summary: returns all items in the list
      operationId: getAllListItems
      parameters:
        - $ref: "#/parameters/listId"
        - $ref: "#/parameters/skip"
        - $ref: "#/parameters/limit"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/listitem"
      responses:
        200:
          description: Successful get list
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /listitems/{useraccountId}/item/{itemId}:
    x-swagger-router-controller: listitems
    get:
      tags:
        - listitems
      summary: returns all listitems with list id
      operationId: getAllListItemsByItem
      parameters:
        - $ref: "#/parameters/useraccountId"
        - $ref: "#/parameters/itemId"
        - $ref: "#/parameters/skip"
        - $ref: "#/parameters/limit"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/listitem"
      responses:
        200:
          description: Successful get list
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /listitems/{id}:
    x-swagger-router-controller: listitems
    delete:
      tags:
        - listitems
      summary: delete item from list
      operationId: removeListItem
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Successful deleted
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /gc/{code}:
    x-swagger-router-controller: gc
    get:
      tags:
        - giftcertificate
      summary: Get gc record
      operationId: getGc
      parameters:
        - $ref: "#/parameters/code"
      responses:
        200:
          description: Successfully retrieved object
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
    put:
      tags:
        - giftcertificate
      summary: Update GC
      operationId: updateGc
      parameters:
        - $ref: "#/parameters/code"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/gc"
      responses:
        200:
          description: Successfully updated GC record
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
              status:
                type: string
                example: used
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /voucher/{code}:
    x-swagger-router-controller: voucher
    get:
      tags:
        - voucher
      summary: Get voucher record
      operationId: getvoucher
      parameters:
        - $ref: "#/parameters/code"
      responses:
        200:
          description: Successfully retrieved object
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
    put:
      tags:
        - voucher
      summary: Update voucher status
      operationId: updateVoucherStatus
      parameters:
        - $ref: "#/parameters/code"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/voucher"
      responses:
        200:
          description: Successfully updated voucher record
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
              status:
                type: string
                example: consumed
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /timeslot/{id}:
    x-swagger-router-controller: timeslots
    get:
      tags:
        - timeslot
      summary: Get timeslot record
      operationId: getTimeslot
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Successfully retrieved object
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /timeslots/all:
    x-swagger-router-controller: timeslots
    put:
      tags:
        - timeslot
      summary: Update all timeslots
      operationId: updateAllTimeslots
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/Timeslots"
      responses:
        200:
          description: Successful updated
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /ordersellers:
    x-swagger-router-controller: ordersellers
    get:
      tags:
        - orderseller
      summary: Get all order seller records
      operationId: getAllOrderSellers
      parameters:
        - $ref: "#/parameters/partnerIdQ"
        - $ref: "#/parameters/skip"
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/mode"
        - $ref: "#/parameters/orderStatus"
        - $ref: "#/parameters/orderNumber"
        - $ref: "#/parameters/orderDate"
        - $ref: "#/parameters/deliverDate"
        - $ref: "#/parameters/timeslotId"
        - $ref: "#/parameters/count"
      responses:
        200:
          description: Fetch all order items
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
    post:
      tags:
        - orderseller
      summary: create an orderseller entry
      operationId: createOrderSeller
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/OrderSellerCreate"
      responses:
        200:
          description: Successful created orderseller entry
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /ordersellers/{id}:
    x-swagger-router-controller: ordersellers
    get:
      tags:
        - orderseller
      summary: Get orderseller
      operationId: getOrderseller
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              id:
                type: number
                example: 123445
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - orderseller
      summary: Update orderseller
      operationId: updateOrderseller
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: put contents
          required: true
          schema:
            $ref: "#/definitions/OrderSellerEntry"
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              id:
                type: number
                example: 123445
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /ordersellers/takeOrder/{id}:
    x-swagger-router-controller: ordersellers
    put:
      tags:
        - orderseller
      summary: Take order action
      operationId: takeOrder
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: put contents
          required: true
          schema:
            $ref: "#/definitions/OrderSellerEntry"
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              id:
                type: number
                example: 123445
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /ordersellers/count/freshFrozen/:
    x-swagger-router-controller: ordersellers
    get:
      tags:
        - orderseller
      summary: Get orderseller
      operationId: countFreshFrozen
      parameters:
        - $ref: "#/parameters/partnerIdQ"
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              id:
                type: number
                example: 123445
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /ratings/save:
    x-swagger-router-controller: ratings
    post:
      tags:
        - ratings
      summary: create a rating entry
      operationId: createRating
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/RatingCreate"
      responses:
        200:
          description: Successful rated
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /ratings:
    x-swagger-router-controller: ratings
    get:
      tags:
        - rating
      summary: get a rating entry
      operationId: getRating
      parameters:
        - $ref: "#/parameters/orderkey"
      responses:
       200:
         description: Success
         schema:
           type: object
           properties:
             id:
               type: number
               example: 123445
       403:
         description: Unauthorized
         schema:
           type: object
           properties:
             message:
               type: string
               example: Unauthorized
  /logs:
    x-swagger-router-controller: logs
    get:
      tags:
        - logs
      summary: show logs
      operationId: showallLogs
      parameters:
        # - $ref: "#/parameters/partnerIdQ"
        - $ref: "#/parameters/skip"
        - $ref: "#/parameters/limit"
      responses:
       200:
         description: Fetch all logs
         schema:
           type: object
           properties:
             id:
               type: number
               example: 10012
       403:
         description: Unauthorized
         schema:
           type: object
           properties:
             message:
               type: string
               example: Unauthorized
  /address/{useraccountId}/list:
    x-swagger-router-controller: address
    get:
      tags:
        - address
      summary: Get all address by user
      operationId: getAllAddress
      parameters:
        - $ref: "#/parameters/useraccountId"
      responses:
        200:
          description: Get all address
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
              status:
                type: string
                example: consumed
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /address/{id}/view:
    x-swagger-router-controller: address
    get:
      tags:
        - address
      summary: Get address by address id
      operationId: getAddress
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Get address by address id
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
              status:
                type: string
                example: consumed
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /address/save:
    x-swagger-router-controller: address
    post:
      tags:
        - address
      summary: Create user address
      operationId: createAddress
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/Address"
      responses:
        200:
          description: Successful address creation
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /address/{id}/save:
    x-swagger-router-controller: address
    put:
      tags:
        - address
      summary: Update address
      operationId: updateAddress
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: update address
          required: true
          schema:
            $ref: "#/definitions/Address"
      responses:
        200:
          description: Successfully updated voucher record
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
              status:
                type: string
                example: consumed
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /settings:
    x-swagger-router-controller: settings
    get:
      tags:
        - settings
      summary: get a rating entry
      operationId: getSettings
      responses:
       200:
         description: Success
         schema:
           type: object
           properties:
             id:
               type: number
               example: 123445
       403:
         description: Unauthorized
         schema:
           type: object
           properties:
             message:
               type: string
               example: Unauthorized
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  transactionEntry:
    type: object
    properties:
      id:
        type: string
        description: transaction id
  transactionUpdate:
    type: object
    required:
      - order_id
    properties:
      order_id:
        type: integer
        description: order Id
      value:
        type: number
        description: transaction value
  sellerAccountRegister:
    title: sellerAccountRegister
    type: object
    required:
      - username
      - email
      - role_id
    properties:
      username:
        type: string
        description: username
      email:
        type: string
        description: user e-mail
      role_id:
        type: integer
        description: role ID
  selleraccount:
    title: ""
    type: object
    properties:
      id:
        type: string
      value:
        type: string
      doc:
        type: object
        description: "selleraccount object"
  timeslot:
    title: " "
    type: object
    properties:
      id:
        type: string
      value:
        type: string
      doc:
        type: object
        description: "Timeslot object"
  token:
    title: " "
    type: object
    required:
      - token
      - accountId
    properties:
      token:
        type: string
        description: token
      accountId:
        type: string
        description: user account id
  gc:
    title: " "
    type: object
    properties:
      code:
        type: string
      value:
        type: string
      doc:
        type: object
        description: "GC object"
  voucher:
    title: " "
    type: object
    properties:
      code:
        type: string
      value:
        type: string
      doc:
        type: object
        description: "voucher object"
  list:
    title: " "
    type: object
    properties:
      useraccount_id:
        type: string
      doc:
        type: object
        description: "List object"
  listitem:
    title: " "
    type: object
    properties:
      listitem_id:
        type: string
      doc:
        type: object
        description: "ListItem object"
  ItemList:
    title: " "
    type: object
    properties:
      id:
        type: string
      doc:
        type: object
        description: "Item object"
  gcList:
    title: gc
    type: object
    properties:
      code:
        type: string
      value:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  Address:
    title: Address
    type: object
    required:
      - useraccount_id
    properties:
      useraccount_id:
        type: string
        description: user id
      doc:
        type: object
        description: "Address object"
  UserLogin:
    title: User
    type: object
    required:
      - username
    properties:
      username:
        type: string
        description: user e-mail
  UserRegister:
    title: UserRegister
    type: object
    required:
      - email
    properties:
      email:
        type: string
        description: user e-mail
  MultipleUserRegister:
    title: Multiple User Register
    type: object
    # required:
    #     - email
    properties:
      username:
        type: string
        description: user name/alias
      email:
        type: string
        description: user email address
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      password:
        type: string
        description: user temporary password
      doc:
        type: object
        description: "Address object"
  partnerbuyeruser:
    title: PBU update
    type: object
    properties:
      useraccount_id:
        type: number
        description: user id
      partner_id:
        type: number
        description: partner buyer id
      balance:
        type: number
        description: PBU balance
      doc:
        type: object
        description: "Address object"
  partnerbuyerusers:
    title: create PBU
    type: object
    properties:
      username:
        type: string
        description: user name
      email:
        type: string
        description: user e-mail
      name:
        type: string
        description: user name
      balance:
        type: number
        description: PBU balance
      credit:
        type: number
        description: PBU credit
      partnerBuyer_id:
        type: number
        description: partner buyer id
      useraccount_id:
        type: number
        description: user id
      status:
        type: string
        description: user account status
  ItemCreate:
    title: ItemCreate
    type: object
    required:
      - name
      - code
    properties:
      name:
        type: string
        description: item name
      code:
        type: number
        description: item specific code
  ItemsCreate:
    title: ItemCreate
    type: object
    properties:
      name:
        type: string
        description: item name
      code:
        type: string
        description: item code
      brandName:
        type: string
        description: item brand
      price:
        type: number
        description: item price
      category1:
        type: string
        description: item cat1
      category2:
        type: string
        description: item cat2
      category3:
        type: string
        description: item cat3
  Item:
    title: item
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: item id
      name:
        type: string
        description: item name
      code:
        type: number
        description: item specific code
      price:
        type: number
        description: item price
  UpdateItems:
    title: item
    type: object
    properties:
      id:
        type: string
        description: item id
      name:
        type: string
        description: item name
      code:
        type: number
        description: item specific code
      price:
        type: number
        description: item price
  OrderSellerCreate:
    title: OrderSellerCreate
    type: object
    required:
      - order_id
    properties:
      order_id:
        type: number
        description: order id
  OrderSellerEntry:
    title: OrderSellerEntry
    type: object
    properties:
      id:
        type: number
        description: orderseller id
  RatingCreate:
    title: RatingCreate
    type: object
    required:
      - starCount
    properties:
      starCount:
        type: number
        description: number of stars
  # FeedBackCreate:
  #   title: FeedBackCreate
  #   type: object
  #   required:
  #     - starCount
  #   properties:
  #     starCount:
  #       type: number
  #       description: number of stars
  TimeslotOrderEntry:
    title: TimeslotOrderEntry
    type: object
    required:
      - timeslot_id
      - order_id
      - date
    properties:
      timeslot_id:
        type: number
        description: timeslot id
      order_id:
        type: number
        description: order id
      date:
        type: string
        description: date of time slot
  Timeslots:
    title: timeslots
    type: array
    items:
      type: object
  Emails:
    title: emails
    type: array
    items:
      type: object
  OrderEntry:
    title: OrderEntry
    type: object
    # required:
    #   - orderkey
    properties:
      orderkey:
        type: string
        description: user session id
  OrderPaymentDetailsEntry:
    title: OrderPayment
    type: object
    required:
      - order_id
      - payment
    properties:
      order_id:
        type: number
        description: order id
      payment:
        type: number
        description: payment made for the order
  OrderItemEntry:
    title: ItemOrder
    type: object
    required:
      - item_id
      - quantity
    properties:
      orderkey:
        type: string
        description: user session id
      user_id:
        type: number
        description: user id
      item_id:
        type: number
        description: order item id
      quantity:
        type: number
        description: quantity of items
  CategoryCreate:
    title: CategoryCreate
    type: object
    required:
      - name
      - level
    properties:
      name:
        type: string
        description: category name
      level:
        type: number
        description: category level
parameters:
  # authHeader:
  #   name: auth
  #   in: header
  #   description: an authorization header
  #   required: true
  addCategory:
    in: query
    name: addCategory
    type: string
    required: false
  selleraccountid:
    in: path
    name: selleraccountid
    type: number
    required: true
  order_id:
    in: path
    name: order_id
    type: integer
    required: true
  number:
    in: query
    name: number
    type: string
    required: true
  useraccount_id:
    in: path
    name: useraccount_id
    type: string
    required: true
  username:
    in: path
    name: username
    type: string
    required: true
  partner_id:
    in: path
    name: partner_id
    type: number
    required: true
  useraccount_Id:
    in: path
    name: useraccount_Id
    type: integer
    required: true
  id:
    in: path
    name: id
    type: string
    required: true
  gcArr:
    in: query
    name: gcArr
    type: array
    required: false
    items:
      type: string
  code:
    in: path
    name: code
    type: string
    required: true
  key:
    in: query
    name: key
    type: string
    required: true
  keyQ:
    in: query
    name: key
    type: string
    required: false
  orderkey:
    in: query
    name: orderkey
    type: string
    required: true
  tNum:
    in: path
    name: tNum
    type: string
    required: true
  orderkeypath:
    in: path
    name: orderkeypath
    type: string
    required: true
  orderId:
    in: path
    name: orderId
    type: string
    required: true
  orderIdQ:
    in: query
    name: orderId
    type: string
    required: false
  keyword:
    in: query
    name: keyword
    type: string
    required: false
  category1:
    in: query
    name: category1
    type: number
    required: false
  category2:
    in: query
    name: category2
    type: number
    required: false
  category3:
    in: query
    name: category3
    type: number
    required: false
  sort:
    in: query
    name: sort
    type: string
    required: false
  sortBy:
    in: query
    name: sortBy
    type: string
    required: false
  limit:
    in: query
    name: limit
    type: number
    required: false
  skip:
    in: query
    name: skip
    type: number
    required: false
  order:
    in: query
    name: order
    type: string
    enum:
      - asc
      - desc
    required: false
  orderBy:
    in: query
    name: orderBy
    type: string
    required: false
  token:
    in: path
    name: token
    type: string
    required: true
  type:
    in: query
    name: type
    type: string
    required: false
  useraccountId:
    in: path
    name: useraccountId
    type: string
    required: true
  partnerId:
    in: path
    name: partnerId
    type: string
    required: true
  partnerIdQ:
    in: query
    name: partnerId
    type: string
    required: true
  partnersId:
    in: query
    name: partnersId
    type: number
    required: false
  listId:
    in: path
    name: listId
    type: string
    required: true
  itemId:
    in: path
    name: itemId
    type: string
    required: true
  email:
    in: path
    name: email
    type: string
    required: true
  mode:
    in: query
    name: mode
    type: string
    required: false
  orderStatus:
    in: query
    name: orderStatus
    type: string
    required: false
  orderNumber:
    in: query
    name: orderNumber
    type: number
    required: false
  orderDate:
    in: query
    name: orderDate
    type: string
    required: false
  deliverDate:
    in: query
    name: deliverDate
    type: string
    required: false
  timeslotId:
    in: query
    name: timeslotId
    type: number
    required: false
  count:
    in: query
    name: count
    type: number
    required: false
